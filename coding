import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
import numpy as np

data = {
    'Product_ID': [101, 102, 103, 101, 104, 105, 101, 102, 103],
    'Customer_ID': [1, 2, 1, 3, 2, 4, 3, 1, 4],
    'Date': ['2023-01-01', '2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04', '2023-01-05', '2023-01-06', '2023-01-07', '2023-01-08'],
    'Amount_Spent': [20, 35, 22, 50, 10, 45, 60, 30, 25]
}

df = pd.DataFrame(data)
df['Date'] = pd.to_datetime(df['Date'])
print(df.head())

df.drop_duplicates(inplace=True)
df.fillna(0, inplace=True)
df['Month'] = df['Date'].dt.month
df['Year'] = df['Date'].dt.year
print(df.head())

monthly_trends = df.groupby(['Year', 'Month']).agg({'Amount_Spent': 'sum'}).reset_index()

plt.figure(figsize=(10, 6))
sns.lineplot(data=monthly_trends, x='Month', y='Amount_Spent', hue='Year', marker='o')
plt.title('Monthly Spending Trends')
plt.xlabel('Month')
plt.ylabel('Total Amount Spent')
plt.legend(title='Year')
plt.show()

customer_spending = df.groupby('Customer_ID').agg({'Amount_Spent': 'sum'}).reset_index()
scaler = StandardScaler()
customer_spending['Amount_Spent_scaled'] = scaler.fit_transform(customer_spending[['Amount_Spent']])
kmeans = KMeans(n_clusters=3, random_state=42)
customer_spending['Cluster'] = kmeans.fit_predict(customer_spending[['Amount_Spent_scaled']])

plt.figure(figsize=(8, 6))
sns.scatterplot(data=customer_spending, x='Customer_ID', y='Amount_Spent', hue='Cluster', palette='Set2', s=100)
plt.title('Customer Segmentation Based on Spending')
plt.xlabel('Customer ID')
plt.ylabel('Total Amount Spent')
plt.legend(title='Cluster')
plt.show()

monthly_trends['Month_Number'] = monthly_trends['Month'] + (monthly_trends['Year'] - monthly_trends['Year'].min()) * 12
X = monthly_trends[['Month_Number']]
y = monthly_trends['Amount_Spent']

model = LinearRegression()
model.fit(X, y)

future_months = np.array([13, 14, 15, 16, 17, 18]).reshape(-1, 1)
predictions = model.predict(future_months)

plt.figure(figsize=(10, 6))
sns.lineplot(data=monthly_trends, x='Month_Number', y='Amount_Spent', label='Historical Sales', marker='o')
sns.lineplot(x=future_months.flatten(), y=predictions, label='Predicted Sales', linestyle='--', marker='o')
plt.title('Sales Forecasting')
plt.xlabel('Month Number')
plt.ylabel('Amount Spent')
plt.legend()
plt.show()
